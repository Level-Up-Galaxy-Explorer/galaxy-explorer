name: Deploy App to ECS

on:
  # push:
  #   branches:
  #     - main
  workflow_dispatch:

env:
  AWS_REGION: af-south-1
  AWS_ECR_REPOSITORY_NAME: ge-app-repository
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
  IMAGE_NAME: ge-app

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Authenticate Docker
        run: |
          aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com

      - name: Build image
        run: |
          docker build -t ${{ env.IMAGE_NAME }}:latest -f galaxy-api/Dockerfile galaxy-api/

      - name: Tag image
        run: |
          docker tag ${{ env.IMAGE_NAME }}:latest ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.AWS_ECR_REPOSITORY_NAME }}:latest

      - name: Push Docker image
        run: |
          docker push ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.AWS_ECR_REPOSITORY_NAME }}:latest

      - name: Update ECS Service
        run: |
          aws ecs update-service --cluster ge-ecs-cluster --service ge-app-service --force-new-deployment --region ${{ env.AWS_REGION }} --no-paginate
